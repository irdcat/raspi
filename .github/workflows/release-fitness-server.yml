name: Release Fitness Server

on:
  push:
    tags:
      - 'fitness-server-[0-9]*\.[0-9]*\.[0-9]*'

concurrency: fitness-server-release

env:
  DOCKER_USER: ${{secrets.DOCKER_USER}}
  DOCKER_PASS: ${{secrets.DOCKER_PASS}}
  REPO_NAME: fitness-server

jobs:
  initialise:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
    steps:
      - name: Extract version from the tag
        id: extract_version
        run: |
          VERSION=$(echo "${GITHUB_REF}" | sed -E 's/refs\/tags\/fitness-server-(.*)/\1/')
          echo "::set-output name=version::$VERSION"
          echo "Extracted version: $VERSION"

  gradle-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'
          cache: 'gradle'
          cache-dependency-path: |
            fitness-server/*.gradle*
            fitness-server/**/gradle-wrapper.properties

      - name: Setup Gradle cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('fitness-server/**') }}
          restore-keys: ${{ runner.os }}-gradle-
      
      - name: Test
        working-directory: ./fitness-server
        run: ./gradlew test

      - name: Coverage
        working-directory: ./fitness-server
        run: ./gradlew koverLog

      - name: Docker Context
        working-directory: ./fitness-server
        run: ./gradlew buildDockerContext

      - name: Upload Docker Context artifact
        uses: actions/upload-artifact@master
        with:
          name: dockerContext
          path: fitness-server/build/dockerContext
          if-no-files-found: error
  
  docker-build:
    needs: 
      - gradle-build
      - initialise
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USER }}
          password: ${{ env.DOCKER_PASS }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Download Docker Context artifact
        uses: actions/download-artifact@master
        with:
          name: dockerContext
          path: .

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/arm64
          push: true
          tags: ${{env.DOCKER_USER}}/${{env.REPO_NAME}}:${{needs.initialise.outputs.version}}
  
  helm-package:
    needs: initialise
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: "3.16.1"
      
      - name: Helm Lint
        run: helm lint .
        working-directory: ./fitness-server/helm

      - name: Helm Package
        run: |
          VERSION=${{needs.initialise.outputs.version}}
          helm package . --app-version $VERSION --version $VERSION --destination ./package
        working-directory: ./fitness-server/helm

      - name: Upload Helm artifact
        uses: actions/upload-artifact@master
        with:
          name: fitness-server-chart
          path: ./fitness-server/helm/package
          if-no-files-found: error

  helm-release:
    needs: helm-package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout registry
        uses: actions/checkout@v4
        with:
          ref: 'helm-registry'
          fetch-depth: 0
      
      - name: Setup Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: "3.16.1"
      
      - name: Download Helm artifact
        uses: actions/download-artifact@master
        with:
          name: fitness-server-chart
          path: ./fitness-server

      - name: Update and Publish Charts
        shell: bash
        run: |
          echo "Indexing charts"
          helm repo index . --merge ./index.yaml --url https://raw.githubusercontent.com/irdcat/raspi/helm-registry/helm
          git config user.name "helm-releaser"
          git config user.email "your-email@example.com"
          git add $(git ls-files -o --exclude-standard)
          git add index.yaml
          git commit -m "Updated ref: $GITHUB_SHA"
          git push
        